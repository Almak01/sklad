import os
import telebot
from telebot import types
import sqlite3
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.DEBUG, format='%(asctime)s - %(levelname)s - %(message)s')

BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞!")

bot = telebot.TeleBot(BOT_TOKEN)

# üîπ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect("parts.db", check_same_thread=False)
cursor = conn.cursor()

# üîπ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
cursor.execute("""
    CREATE TABLE IF NOT EXISTS parts (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        quantity INTEGER NOT NULL
    )
""")
cursor.execute("""
    CREATE TABLE IF NOT EXISTS transactions (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        part_id INTEGER NOT NULL,
        quantity INTEGER NOT NULL,
        taken_by TEXT NOT NULL,
        transaction_type TEXT NOT NULL,  -- "add" –∏–ª–∏ "issue"
        date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (part_id) REFERENCES parts(id)
    )
""")
conn.commit()

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
@bot.message_handler(commands=['start'])
def start(message):
    logging.debug("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.")
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    add_button = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")
    list_button = types.KeyboardButton("üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π")
    issue_button = types.KeyboardButton("üõ† –í—ã–¥–∞—á–∞ –∑–∞–ø—á–∞—Å—Ç–∏")
    report_button = types.KeyboardButton("üìä –û—Ç—á–µ—Ç")
    markup.add(add_button, list_button, issue_button, report_button)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç —Å–∫–ª–∞–¥–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π. \n"
                                      "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:", reply_markup=markup)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π"
@bot.message_handler(func=lambda message: message.text == "üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π")
def list_parts(message):
