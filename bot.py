import os
import telebot
from telebot import types
import sqlite3

# üîπ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("BOT_TOKEN")

if not BOT_TOKEN:
    raise ValueError("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞!")

bot = telebot.TeleBot(BOT_TOKEN)

# üîπ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite
conn = sqlite3.connect("parts.db", check_same_thread=False)
cursor = conn.cursor()

# üîπ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
cursor.execute("""
    CREATE TABLE IF NOT EXISTS parts (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        quantity INTEGER NOT NULL
    )
""")
cursor.execute("""
    CREATE TABLE IF NOT EXISTS transactions (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        part_id INTEGER NOT NULL,
        quantity INTEGER NOT NULL,
        taken_by TEXT NOT NULL,
        transaction_type TEXT NOT NULL,  -- "add" –∏–ª–∏ "issue"
        date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        FOREIGN KEY (part_id) REFERENCES parts(id)
    )
""")
conn.commit()

# üîπ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    add_button = types.KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")
    list_button = types.KeyboardButton("üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π")
    issue_button = types.KeyboardButton("üõ† –í—ã–¥–∞—á–∞ –∑–∞–ø—á–∞—Å—Ç–∏")
    markup.add(add_button, list_button, issue_button)

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç —Å–∫–ª–∞–¥–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π. \n"
                                      "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –æ–ø—Ü–∏–π –Ω–∏–∂–µ:", reply_markup=markup)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å"
@bot.message_handler(func=lambda message: message.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø—á–∞—Å—Ç—å")
def add_part(message):
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏:")
    bot.register_next_step_handler(msg, process_name)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏
def process_name(message):
    name = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ:")
    bot.register_next_step_handler(msg, process_quantity, name)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—á–∞—Å—Ç–∏
def process_quantity(message, name):
    try:
        quantity = int(message.text)

        cursor.execute("INSERT INTO parts (name, quantity) VALUES (?, ?)", (name, quantity))
        conn.commit()

        bot.send_message(message.chat.id, f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø—á–∞—Å—Ç—å: {name}, {quantity} —à—Ç.")
    except ValueError:
        bot.send_message(message.chat.id, "‚ö† –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).")

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–í—ã–¥–∞—á–∞ –∑–∞–ø—á–∞—Å—Ç–∏"
@bot.message_handler(func=lambda message: message.text == "üõ† –í—ã–¥–∞—á–∞ –∑–∞–ø—á–∞—Å—Ç–∏")
def issue_part(message):
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–ø—á–∞—Å—Ç–µ–π
    cursor.execute("SELECT name, quantity FROM parts")
    parts = cursor.fetchall()

    if not parts:
        bot.send_message(message.chat.id, "üì≠ –°–∫–ª–∞–¥ –ø—É—Å—Ç.")
        return

    text = "üìã –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π:\n\n"
    for name, quantity in parts:
        text += f"üîπ {name}: {quantity} —à—Ç.\n"

    # –í—ã–≤–æ–¥–∏–º —Å–ø–∏—Å–æ–∫ –∏ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º, –∫–∞–∫—É—é –∑–∞–ø—á–∞—Å—Ç—å –≤—ã–¥–∞—Ç—å
    msg = bot.send_message(message.chat.id, text + "\n–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è –≤—ã–¥–∞—á–∏:")
    bot.register_next_step_handler(msg, process_issue_name)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è –≤—ã–¥–∞—á–∏
def process_issue_name(message):
    part_name = message.text
    msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–ª—è –≤—ã–¥–∞—á–∏:")
    bot.register_next_step_handler(msg, process_issue_quantity, part_name)

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è –≤—ã–¥–∞—á–∏
def process_issue_quantity(message, part_name):
    try:
        quantity = int(message.text)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–∞—è –∑–∞–ø—á–∞—Å—Ç—å –Ω–∞ —Å–∫–ª–∞–¥–µ
        cursor.execute("SELECT id, quantity FROM parts WHERE name = ?", (part_name,))
        part = cursor.fetchone()

        if not part:
            bot.send_message(message.chat.id, "‚ùå –ó–∞–ø—á–∞—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ —Å–∫–ª–∞–¥–µ.")
            return

        part_id, current_quantity = part
        if current_quantity < quantity:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–∞–ø—á–∞—Å—Ç–µ–π –Ω–∞ —Å–∫–ª–∞–¥–µ.")
            return

        # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –§–ò–û, –∫—Ç–æ –∑–∞–±—Ä–∞–ª –∑–∞–ø—á–∞—Å—Ç—å
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–±—Ä–∞–ª –∑–∞–ø—á–∞—Å—Ç—å:")
        bot.register_next_step_handler(msg, process_issue_taken_by, part_id, quantity)

    except ValueError:
        bot.send_message(message.chat.id, "‚ö† –û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ).")

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –§–ò–û –∏ –≤—ã–¥–∞—á–∞ –∑–∞–ø—á–∞—Å—Ç–∏
def process_issue_taken_by(message, part_id, quantity):
    taken_by = message.text

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—á–∞—Å—Ç–∏ –Ω–∞ —Å–∫–ª–∞–¥–µ
    cursor.execute("UPDATE parts SET quantity = quantity - ? WHERE id = ?", (quantity, part_id))
    conn.commit()

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–ø–∏—Å—å –æ –≤—ã–¥–∞—á–µ
    cursor.execute("INSERT INTO transactions (part_id, quantity, taken_by, transaction_type) VALUES (?, ?, ?, ?)", 
                   (part_id, quantity, taken_by, "issue"))
    conn.commit()

    bot.send_message(message.chat.id, f"‚úÖ –ó–∞–ø—á–∞—Å—Ç—å –≤—ã–¥–∞–Ω–∞: {quantity} —à—Ç. ({taken_by})")

# üîπ –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π"
@bot.message_handler(func=lambda message: message.text == "üì¶ –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π")
def list_parts(message):
    cursor.execute("SELECT name, quantity FROM parts")
    parts = cursor.fetchall()

    if not parts:
        bot.send_message(message.chat.id, "üì≠ –°–∫–ª–∞–¥ –ø—É—Å—Ç.")
        return

    text = "üìã –°–ø–∏—Å–æ–∫ –∑–∞–ø—á–∞—Å—Ç–µ–π:\n\n"
    for name, quantity in parts:
        text += f"üîπ {name}: {quantity} —à—Ç.\n"

    bot.send_message(message.chat.id, text)

# üîπ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling(none_stop=True)
